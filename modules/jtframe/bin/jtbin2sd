#!/bin/bash
# Copies the contents of JTBIN to the SD card

function show_help {
cat<<HELP
    JTFRAME (c) Jose Tejada 2023

Copies the contents of JTBIN or the release folder to
a SD card with the name of the target device.

Usage:

jtbin2sd.sh [setname] [-l|--local]

Optionally indicate the setname to be used as the game to load on power up (core.arc file)

-a, --all       Regenerate all .rom files (including alternates)
-g, --git       Uses JTBIN as the target folder
-r, --rom       Runs "jtframe mra" for each mra file found to get the main .rom files generated
-v, --verbose
HELP
}

LOCAL=1
V=
CNT=0
SETNAME=
RUNMRA=
MAINONLY=--mainonly

while [ $# -gt 0 ]; do
    case "$1" in
        -g|--git)
            LOCAL=0;; # JTBIN will not be modified
        -r|--rom)
            RUNMRA=1;;
        -a|--all)
            RUNMRA=1
            MAINONLY=;;
        -v|--verbose)
            V=-v;;
        -h|--help)
            show_help
            exit 1;;
        *)
        if [[ "$1" = -* ]]; then
            echo "Unknown argument $1"
            exit 1
        fi
        if [ -z "$SETNAME" ]; then
            SETNAME=$1
        else
            echo "Unknown argument $1"
            echo "Setname was already set to $SETNAME"
            exit 1
        fi;;
    esac
    shift
done

if  pwd | grep "$JTBIN"; then
    echo "Copying from JTBIN as the current working dir is JTBIN"
elif [ $LOCAL = 1 ]; then
    export JTBIN=$JTROOT/release
fi

cd $JTBIN/mra

function cp_mist {
    cp $V $JTBIN/$1/*rbf $DST
    # Get the main MRA as the core's arc for JTAG programming
    for CORE in $JTBIN/$1/*rbf; do
        CORE=`basename $CORE .rbf`
        IFS=$'\n'
        for MRA in `find -name "*mra" -print0 | xargs -0 grep --files-with-matches --ignore-case $CORE`; do
            mra -z $HOME/.mame/roms -O $DST -A -s "$MRA"
        done
        unset IFS
    done
    # Set one game as core.arc
    if [ ! -z "$SETNAME" ]; then
        local MAINSET=`grep -iw $SETNAME $DST/*.arc --files-with-matches | head -n 1`
        if [ ! -z "$MAINSET" ]; then
            cp "$MAINSET" $DST/core.arc
        else
            echo "Cannot find any arc file for $SETNAME"
        fi
    elif [ ! -e $DST/core.arc ]; then
        cp -v "`ls $DST/*arc|head -n 1`" $DST/core.arc;
    fi
}

if [ -n "$RUNMRA" ]; then
    RBF=`find $JTBIN/mra -name "*.mra" -print0 | xargs -0 -I_ xmllint --xpath '//rbf/text()' _ | sort | uniq | sed s/^jt//`
    jtframe mra $RBF $MAINONLY
fi

for i in SIDI128 SIDI MIST POCKET; do
    DST=/media/$USER/${i^^}
    if [ ! -d $DST ]; then
        continue
    fi
    echo "`basename $DST` found"
    rm -rf $DST/*
    # Copy RBF and ARC/JSON files
    if [ $i = POCKET ]; then
        cp -r $V $JTBIN/pocket/raw/* $DST
    else
        cp_mist ${i,,} &
    fi
    wait
    # Copy ROM files
    if [ -d $ROM ]; then
        if [ $i = POCKET ]; then
            cd $ROM
            # Copy Pocket assets
            for k in $ROM/cp_*sh; do
                if [ ! -z "$V" ]; then
                    echo $k $ROM
                fi
                $k $ROM
            done
        else
            # only copy .rom files for which there is an ARC file
            # convert .RAM file names to uppercase when copying
            find $DST -name "*.arc" -print0 | xargs -0 grep -ho NAME=".*" | \
                (while IFS= read -r LINE; do \
                    LINE=${LINE:5}; FN=$ROM/${LINE,,}.rom; \
                    if [ -e "$FN" ]; then cp "$FN" $DST; fi; \
                    FN=${FN%rom}RAM; \
                    if [ -e "$FN" ]; then cp "$FN" $DST/$(basename ${FN^^}); fi \
                done)
        fi
    else
        echo "Skipping ROMs (no ROM folder)"
    fi
    CNT=$((CNT+1))
done

if [ $CNT = 0 ]; then
    echo "Nothing done"
fi

# copy the beta file to the Pocket
if [[ -d /media/$USER/POCKET && -e $JTUTIL/beta.bin ]]; then
    mkdir -p /media/$USER/POCKET/Assets/jtpatreon/common
    for i in /media/$USER/POCKET/Assets/*; do
        if [ -d $i/common ]; then
            cp $JTUTIL/beta.bin -d $i/common
        fi
    done
fi

# warn for missing rbf_r in the Pocket
if [ -d /media/$USER/POCKET ]; then
    for i in /media/$USER/POCKET/Cores/*; do
        if [ ! -e $i/*.rbf_r ]; then
            CORENAME=`basename $i`
            CORENAME=${CORENAME#jotego.jt}
            echo "POCKET: no rbf_r for $CORENAME"
        fi
    done
fi

# Make it a bit nicer for MiST systems
for i in MIST SIDI SIDI128; do
    if [ ! -d /media/$USER/$i ]; then continue; fi
    # Hide RBF files, boots only from ARC files
    fatattr +h /media/$USER/$i/*.rbf
    # Mapping for 8BitDo M30gyu
    cat > /media/$USER/$i/MIST.INI <<EOF
[MIST]
USB_STORAGE=1
JOYSTICK_REMAP="0CA3,0024,1,2,4,8,100,20,10,80,200,40,1000,800,0,400,0,0"
SCANDOUBLER_DISABLE=0
EOF
done