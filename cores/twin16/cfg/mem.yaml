params:
  - { name: PCM_OFFSET,  value: "(`PCM_START-`JTFRAME_BA3_START) >> 1" }
  - { name: UPD_OFFSET,  value: "(`UPD_START-`JTFRAME_BA3_START) >> 1" }
  - { name: GFX_OFFSET,  value: "(`GFX_START-`JTFRAME_BA1_START) >> 1" }
  - { name: GFX_LEN,     value: "(`JTFRAME_BA2_START>>1)-GFX_OFFSET"   }
  - { name: STRAM_OFFSET,value: "22'h100000" }
  - { name: MRAM_OFFSET, value: "22'h100000" }
  - { name: SRAM_OFFSET, value: "GFX_OFFSET+GFX_LEN" }
clocks:
  clk48:
    - freq: 3579545
      outputs:
        - cen_fm
        - cen_fm2
    - freq: 640000
      outputs:
        - cen_640
        - cen_320
    - freq: 1536000
      outputs:
        - cen_1m5
audio:
  rsum: 12k
  rsum_feedback_res: true
  channels: # stereo output
    - { name: fm,  module: jt51,     rsum: 3k,   rc: [ { r: rout, c: 2.2n }, { r: 666,  c:  33n } ] } # 1k || (1k+1k)
    - { name: pcm, module: jt007232, rsum: 5.1k, rc: [ { r: 19.65k, c: 470p } ], pre: 0.131  } # 0.164*10k/12.2k
    - { name: upd, module: jt7759,   rsum: 8.5k, fir: fir_192k_4k.csv }
sdram:
  banks:
    - buses:
        - name: mram
          addr_width: 14
          data_width: 16
          offset: MRAM_OFFSET
          rw: true
          do_not_erase: true
        - name: main
          addr_width: 18
          data_width: 16
    - buses:
        - name: sram
          #  16kB of work RAM
          # 128kB of object tile RAM (17 bits)
          # 144kB total (18 bits)
          addr_width: 18
          data_width: 16
          offset: SRAM_OFFSET
          rw: true
          do_not_erase: true
        # sub includes MAME's "data" ROM region
        - name: sub
          addr_width: 19
          data_width: 16
        # SRAM is mapped after lyro so the first 128 kB of SRAM
        # are accessible from the lyro slot
        - name: lyro
          addr_width: 22
          data_width: 32
          offset: GFX_OFFSET
        # check object: slot for sub CPU to check the tile ROM
        # it does not include the object tile RAM
        # note how DW==16
        - name: chko
          addr_width: 21
          data_width: 16
          offset: GFX_OFFSET
    - buses:
        # Scroll tiles on SDRAM for machines with little BRAM
        - name: stile
          addr_width: 18
          data_width: 16
          din: sram_din
          rw: true
          offset: STRAM_OFFSET
          when: [ SCRTILE_SDRAM ]
        - name: lyra
          addr_width: 18
          data_width: 32
          offset: STRAM_OFFSET
          when: [ SCRTILE_SDRAM ]
        - name: lyrb
          addr_width: 18
          data_width: 32
          offset: STRAM_OFFSET
          when: [ SCRTILE_SDRAM ]
        - name: lyrf
          addr_width: 14
          data_width: 32
    - buses:
        - name: snd
          addr_width: 15
          data_width: 8
        - name: pcma
          addr_width: 21
          data_width: 8
          offset: PCM_OFFSET
        - name: pcmb
          addr_width: 21
          data_width: 8
          offset: PCM_OFFSET
        - name: upd
          addr_width: 17
          data_width: 8
          offset: UPD_OFFSET
bram:
  # 8 (Fix) + 8 (SCR-A) + 8 (SCR-B) + 16 (OBJ) + 4 (PAL)
  - name: nvram
    addr_width: 15
    data_width: 16
    din: mram_din
    rw: true
    ioctl: { save: true, order: 0, when: [ JTFRAME_RELEASE ] }
  - name: fram
    addr_width: 14
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 0, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: main, we: fx_we, rw: true, din: mram_din, dout: mf_dout }
  # 256kB for Scroll Tile Bitmaps as BRAM
  - name: stram
    unless: [ SCRTILE_SDRAM ]
    addr_width: 18
    data_width: 16
    ioctl: { save: true, order: 1, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: stile, rw: true, din: sram_din, dout: stile_dout }
  # VRAM in schematics is mapped to scra and scrb
  - name: scra
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 2, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: vram, we: va_we, rw: true, din: v_din, dout: ma_dout }
  - name: scrb
    addr_width: 13
    data_width: 16
    sim_file: true
    ioctl: { save: true, order: 3, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: vram, we: vb_we, rw: true, din: v_din, dout: mb_dout }
  - name: oram
    addr_width: 14
    data_width: 16
    rw: true
    sim_file: true
    ioctl: { save: true, order: 4, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: osha, we: osha_we, rw: true, din: v_din, dout: mo_dout }
  - name: pal
    addr_width: 12
    data_width: 8
    sim_file: true
    ioctl: { save: true, order: 5, unless: [ JTFRAME_RELEASE ] }
    dual_port: { name: main, we: pal_we, rw: true, addr: "main_addr[12:1]", din: "mram_din[7:0]", dout: mp_dout }
