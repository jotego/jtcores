params:
  # - { name: MCU_PROM,    value: "`MCU_START"     }
  # - { name: N7751_PROM,  value: "`N7751_START"   }
  # - { name: KEY_PROM,    value: "`MAINKEY_START" }
  # - { name: MC8123_PROM, value: "`SNDKEY_START"  }
  # - { name: FD_PROM,     value: "`FD1089_START"  }
  - { name: PCM_OFFSET,  value: (`PCM_START-BA1_START)>>1 }
  - { name: VRAM_OFFSET, value: 22'h10_0000 }
  # - { name: SRAM_OFFSET, value: 22'h18_0000 }
clocks:
  clk48:
    - freq: 4000000
      outputs:
        - cen_fm
        - cen_fm2
    - freq: 5000000
      outputs:
        - cen_snd
        - cen_nc1
    - freq: 6000000
      outputs:
        - cen6
        - cen_nc2
    - freq: 640000
      outputs:
        - cen_pcm
        - cen_nc3
  clk24:
    - freq: 8000000
      outputs:
        - mcu_cen
        - cen_nc4
audio:
  rsum: 10k
  mute: true
  rc: { r: 47k, c: 1n }
  channels:
    - { name: fm, module: jt51, rsum: 47k, rc: [{r: 1rout, c: 1.5n}]}
    # 0.8 because of TTL output not reaching the supply fully
    # roughly equivalent to original 4th order filter (4V for high, 0.4 for low)
    # 3.6Vpp/5V = 0.72
    - { name: pcm, data_width: 8, rsum: 10k, fir: fir_192k_4k.csv, vpp: 0.72, pre: 0.1 }
sdram:
  banks:
    # Bank 0 for the main and sub CPUs
    - buses:
        # XRAM does not include the first 16kB of work RAM
        - { name: xram,   addr_width: 19, data_width: 16, offset: VRAM_OFFSET, rw: true }
        - { name: main,   addr_width: 19, data_width: 16 } # ok latch 0
        - { name: map1,   addr_width: 16, data_width: 16, offset: VRAM_OFFSET, cs: gfx_cs }
        - { name: map2,   addr_width: 16, data_width: 16, offset: VRAM_OFFSET, cs: gfx_cs }

    # Bank 1 for sound & frame buffer
    - buses:
        - { name: snd, addr_width: 19, data_width: 8 }
        - { name: pcm, addr_width: 17, data_width: 8, offset: PCM_OFFSET }

    # Bank 2 for tile graphics
    - buses:
        - { name: char, addr_width: 20, data_width: 32, cs: gfx_cs }
        - { name: scr1, addr_width: 20, data_width: 32, cs: gfx_cs }
        - { name: scr2, addr_width: 20, data_width: 32, cs: gfx_cs }

    # Bank 3 objects
    - buses:
        - { name: obj, addr_width: 21, data_width: 16 }
# first 16kB of work RAM area saved as NVRAM
bram:
  - name: nvram
    addr_width: 14
    data_width: 16
    rw: true
    ioctl:
      save: true
      restore: true
    dual_port:
      name: wram
      rw: true
      addr: main_addr[13:1]
      din: xram_din
      dout: wram_dout