include:
  - file: audio
    game: outrun
game: outrun
params:
  - { name: ROAD_START }
  - { name: FD_PROM,     value: "`FD1089_START" }
  - { name: SND_OFFSET, value: "(`SND_START-BA1_START)>>1" }
  - { name: PCM_OFFSET,  value: (`PCM_START-BA1_START)>>1 }
  - { name: VRAM_OFFSET, value: 22'h10_0000 }
  - { name: SRAM_OFFSET, value: 22'h18_0000 }
  - { name: RD0_OFFSET,  value: "3<<22 | (ROAD_START-`JTFRAME_BA3_START)>>1" }
  - { name: RD1_OFFSET,  value: RD0_OFFSET+26'h4000 }
clocks:
  clk48:
    - freq: 8000000
      outputs:
        - cen_pcm
        - cen_fm
        - cen_fm2
    - freq: 5000000
      outputs:
        - cen_snd
        - cen_nc
sdram:
  banks:
    # Bank 0 for the main and sub CPUs
    -
      buses:
        - { name: xram,   addr_width: 16, data_width: 16, offset: VRAM_OFFSET, rw: true }
        - { name: subram, addr_width: 15, data_width: 16, offset: SRAM_OFFSET, rw: true }
        - { name: main,   addr_width: 19, data_width: 16 } # ok latch 0
        - { name: map1,   addr_width: 16, data_width: 16, offset: VRAM_OFFSET, cs: gfx_cs }
        - { name: map2,   addr_width: 16, data_width: 16, offset: VRAM_OFFSET, cs: gfx_cs }
      # dump:
      #   - { dst_addr: 16384, offset: VRAM_OFFSET, addr_width: 16 }

    # Bank 1 for sound & frame buffer
    -
      buses:
        - { name: subrom, addr_width: 19, data_width: 16 } # ok latch 0, # latch 0
        - { name: snd, addr_width: 16, data_width: 8, offset: SND_OFFSET }
        - { name: pcm, addr_width: 19, data_width: 8, offset: PCM_OFFSET }

    # Bank 2 for tile graphics
    -
      buses:
        # - { name: fbuf, addr_width: 18, data_width: 16, offset: FBUF_OFFSET, rw: true }
        - { name: char, addr_width: 14, data_width: 32, cs: gfx_cs }
        - { name: scr1, addr_width: 18, data_width: 32, cs: gfx_cs }
        - { name: scr2, addr_width: 18, data_width: 32, cs: gfx_cs }

    # Bank 3 for objects
    -
      buses:
        - { name: obj, addr_width: 20, data_width: 16 } # this line is different in Out Run

# The ROAD 32kB memory must go in BRAM to guarantee correct data reads at 48 MHz
bram:
  - { name: rd0, addr_width: 15, data_width: 16, rom: { offset: RD0_OFFSET } }
  # 32kB of work RAM area saved as NVRAM
  - name: nvram
    addr_width: 15
    data_width: 16
    rw: true
    ioctl:
      save: true
      restore: true
    dual_port:
      name: wram
      rw: true
      addr: main_addr[14:1]
      din: xram_din
      dout: wram_dout