params:
  - { name: SCR_OFFSET, value: "`SCR_START >> 1" }
  - { name: OBJ_OFFSET, value: "`OBJ_START >> 1" }
  - { name: SND_OFFSET, value: "`SND_START >> 1" }

clocks:
  clk24:
    - mul: 1
      div: 4
      outputs:
        - cpu4
        - ti1
        - ti2
audio:
  # like kicker's but the second capacitor is software-controlled
  rsum: 220
  rc: { r: 1k, c: 100n }
  channels:
    # equivalent filter
    - { name: psg1, module: jt89, rsum: 220, rc: [
        { r: 2k, c: 100n }, { r:     0, c:    0 }, # always on
        { r: 2k, c: 100n }, { r: 1.25k, c: 470n }, # optional 2nd capacitor
      ], rc_en: true }
    - { name: psg2, module: jt89, rsum: 220, rc: [
        { r: 2k, c: 100n }, { r:     0, c:    0 }, # always on
        { r: 2k, c: 100n }, { r: 1.25k, c:  47n },
        { r: 2k, c: 100n }, { r: 1.25k, c: 470n }, # optional 2nd/3rd capacitors
        { r: 2k, c: 100n }, { r: 1.25k, c: 517n },
      ], rc_en: true }
    - { name: rdac,  data_width: 8, unsigned: true, rsum: 220, rc: [{ r: 0.8k, c: 470n }], rc_en: true }
download:
  pre_addr: true
  post_data: true
sdram:
  banks:
    -
      buses:
        -
          name: scr
          # 32-bit buses are indexed like
          # scr_addr[13:1], the LSB (index 0)
          # is always zero
          addr_width: 15
          data_width: 32
          offset: SCR_OFFSET
          cs: LVBL
        -
          name: objrom
          addr_width: 16
          data_width: 32
          offset: OBJ_OFFSET
        -
          name: snd
          addr_width: 14
          data_width: 8
          offset: SND_OFFSET
        -
          name: main
          addr_width: 16
          data_width: 8
bram:
  - name: vram
    addr_width: 11
    data_width: 16
    sim_file: true
    dual_port:
      name: vramrw
      din:  vramrw_din
      dout: vramrw_dout
      rw:   true
    ioctl: { save: true, order: 0 }